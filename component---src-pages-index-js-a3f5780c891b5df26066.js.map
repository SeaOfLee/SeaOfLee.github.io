{"version":3,"sources":["webpack:///./src/data/socialMedia.js","webpack:///./src/data/breakpoints.js","webpack:///./src/components/socialMedia.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/data/color.js","webpack:///./src/data/font.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["SOCIAL_MEDIA_ACCOUNTS","name","icon","faLinkedin","url","faTwitter","faGithub","breakpoints","small","styles","_styles","socialWrapper","display","justifyContent","fontSize","width","margin","iconWrapper","cursor","color","primary","SocialMedia","handleSocialClick","account","window","open","getIcons","icons","map","react_default","a","createElement","className","_this","props","classes","onClick","key","index_es","push","href","faEnvelope","render","this","Component","defaultProps","injectSheet","title","fontWeight","font","bold","text","regular","bottom","IndexPage","infoText","layout","faCode","socialMedia","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","config","autoAddCss","app","fontFamily","padding","Layout","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","site","siteMetadata","meta","content","lang","style","maxWidth","paddingTop","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-a3f5780c891b5df26066.js","sourcesContent":["import {\n  faTwitter,\n  faLinkedin,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons'\n\nexport const SOCIAL_MEDIA_ACCOUNTS = [\n  {\n    name: 'LinkedIn',\n    icon: faLinkedin,\n    url: 'https://www.linkedin.com/in/leerichardson2/',\n  },\n  {\n    name: 'Twitter',\n    icon: faTwitter,\n    url: 'https://twitter.com/leerichftw',\n  },\n  {\n    name: 'Github',\n    icon: faGithub,\n    url: 'https://github.com/seaoflee',\n  },\n]\n","const breakpoints = {\n  small: '@media (max-width: 767px)',\n}\n\nexport default breakpoints\n","import React, { Component } from 'react'\nimport injectSheet from 'react-jss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons'\nimport { SOCIAL_MEDIA_ACCOUNTS } from '../data/socialMedia'\nimport color from '../data/color'\nimport breakpoints from '../data/breakpoints'\n\nconst styles = {\n  socialWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    fontSize: '3em',\n    width: '70%',\n    margin: [50, 'auto'],\n  },\n  iconWrapper: {\n    cursor: 'pointer',\n    color: color.primary,\n  },\n  [breakpoints.small]: {\n    socialWrapper: {\n      width: '100%',\n    },\n  },\n}\n\nclass SocialMedia extends Component {\n  handleSocialClick = account => window.open(account.url, '_blank')\n\n  getIcons = () => {\n    const icons = SOCIAL_MEDIA_ACCOUNTS.map(account => (\n      <div\n        className={`${this.props.classes.iconWrapper}`}\n        onClick={() => this.handleSocialClick(account)}\n        key={`social-${account.name}`}\n      >\n        <FontAwesomeIcon icon={account.icon} />\n      </div>\n    ))\n\n    icons.push(\n      <a\n        className={`${this.props.classes.iconWrapper}`}\n        href={'mailto:lee@leerichardson.net?subject=Hello%20Lee'}\n        key={`social-email`}\n      >\n        <FontAwesomeIcon icon={faEnvelope} />\n      </a>\n    )\n\n    return icons\n  }\n\n  render() {\n    const { classes } = this.props\n    return <div className={`${classes.socialWrapper}`}>{this.getIcons()}</div>\n  }\n}\n\nSocialMedia.defaultProps = {\n  classes: styles,\n}\n\nexport default injectSheet(styles)(SocialMedia)\n","import React, { Component } from 'react'\nimport injectSheet from 'react-jss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// this ensures that the icon CSS is loaded immediately before attempting to render icons\nimport '@fortawesome/fontawesome-svg-core/styles.css'\nimport { faCode } from '@fortawesome/free-solid-svg-icons'\n\nimport Layout from '../components/layout'\nimport Image from '../components/image'\nimport SocialMedia from '../components/socialMedia'\nimport font from '../data/font'\n\nconst styles = {\n  title: {\n    fontWeight: font.bold,\n    fontSize: '3em',\n  },\n  text: {\n    fontWeight: font.regular,\n    margin: {\n      bottom: '15px',\n    },\n  },\n}\n\nclass IndexPage extends Component {\n  render() {\n    const { classes } = this.props\n    const infoText = text => <div className={`${classes.text}`}>{text}</div>\n    const msg1 =\n      \"I'm a frontend software engineer who loves coffee, cooking, loud music, learning, & Javascript.\"\n    const msg2 =\n      \"Let's connect! I would love to hear from you. You're awesome, BTW.\"\n    return (\n      <Layout>\n        <h1 className={`${classes.title}`}>\n          <FontAwesomeIcon icon={faCode} />\n          <br />\n          Lee\n          <br />\n          Richardson\n        </h1>\n        {infoText(msg1)}\n        {infoText(msg2)}\n        <SocialMedia />\n      </Layout>\n    )\n  }\n}\n\nIndexPage.defaultProps = {\n  classes: styles,\n}\n\nexport default injectSheet(styles)(IndexPage)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const color = {\n  primary: '#0356DD',\n}\n\nexport default color\n","const font = {\n  default: ['Poppins', 'Roboto', 'Open Sans', 'sans-serif'],\n  bold: '800',\n  regular: '400',\n}\n\nexport default font\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport { config } from '@fortawesome/fontawesome-svg-core'\nimport { StaticQuery, graphql } from 'gatsby'\nimport color from '../data/color'\nimport font from '../data/font'\n\nimport './layout.css'\n\nconfig.autoAddCss = false\n\nconst styles = {\n  app: {\n    fontFamily: font.default,\n    fontWeight: font.regular,\n    color: color.primary,\n    padding: [90, 30],\n  },\n}\n\nconst Layout = ({ classes, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className={`${classes.app}`}>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'Personal site for Lee Richardson.',\n            },\n            {\n              name: 'keywords',\n              content: 'personal, developer, frontend, javascript',\n            },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default injectSheet(styles)(Layout)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}